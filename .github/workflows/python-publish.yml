# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
  push:
    branches:
      - "master"

permissions:
  contents: read

jobs:
  #build_wheels:

    #runs-on: ${{ matrix.os }}

    #strategy:
    #  matrix:
    #    os: [ubuntu-latest]

    #steps:
    #- uses: actions/checkout@v4
    #- name: Set up Python
    #  uses: actions/setup-python@v5

    #- name: Install dependencies
    #  run: |
    #    python -m pip install --upgrade pip
    #    python -m pip install cibuildwheel==2.20.0

    #- name: Build wheels
    #  run: python -m cibuildwheel --output-dir dist
    #  env:
    #    CIBW_SKIP: cp36-*
    #    CIBW_BEFORE_BUILD_LINUX: yum install -y fftw-devel || apk add --upgrade fftw-dev || apt-get install libfftw3-dev
    #    CIBW_BEFORE_BUILD_MACOS: brew install fftw
        
    #- uses: actions/upload-artifact@v4
    #  with:
    #    name: dist-${{ matrix.os }}-${{ strategy.job-index }}
    #    path: dist/*.whl
        
  build_sdist:

    runs-on: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5

    - name: Install FFTW3 on Linux
      run: sudo apt-get install libfftw3-dev

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      run: python -m build

    - name: Upload sdist
      uses: actions/upload-artifact@v4
      with:
        name: dist-sdist
        path: dist/*.tar.gz

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    needs:
    #- build_wheels
    - build_sdist
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    environment:
      name: pypi
      url: https://pypi.org/p/galario

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        path: dist
        pattern: dist-*
        merge-multiple: true
    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
